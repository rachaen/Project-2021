* {
  box-sizing: border-box;
  margin: 0;
}

body {
  font-family: 'DM Sans', sans-serif;
}

/*Reset CSS*/
a {
  color: inherit; /*부모의 색을 상속받기*/
  text-decoration: none;
}

/* form과 관련된 요소는 font-family가 안 먹는 경우가 있기 때문에 한번 더 명시를 해주어야 함 */
button,
input,
textarea {
  font-family: 'DM Sans', sans-serif;
  font-size: 16px;
}

/* 클릭 시 파란선 */
button:focus,
button:active,
input:focus,
input:active,
textarea:focus,
textarea:active {
  outline: none;
  box-shadow: none;
}

ul,
ol,
li {
  list-style-type: none;
  padding-left: 0;
  margin-left: 0;
}

/*중복되는 부분 미리 해주기*/
p {
  font-size: 16px;
  line-height: 1.5;
  color: #2b292d;
  letter-spacing: -0.01em;
}

.fill-button {
  display: inline-flex;
  justify-content: center;
  align-items: center;
  color: #fff;
  background-color: #3040c4;
  width: 140px;
  height: 48px;
  border: none; /* button에 border가 생겨서 추가 */
  border-radius: 2px;
  font-size: 15px;
  line-height: 1.6;
  letter-spacing: -0.05em;
  font-weight: 700;
  transition: opacity 300ms ease-in-out;
}

.fill-button.inverted {
  color: #3040c4;
  background-color: #fff;
}

.fill-button:hover {
  opacity: 0.5;
}

.section {
  padding: 80px 0;
}
.section-category {
  display: block;
  font-size: 16px;
  line-height: 1.5;
  letter-spacing: -0.01em;
  margin-bottom: 8px;
}

.section-title {
  font-size: 34px;
  line-height: 1.0588235294;
  letter-spacing: -0.03em;
  margin-bottom: 24px;
  color: #2b292d;
}

/* Landing */
.landing {
  text-align: center;
  background-color: #fdded8;
}

/* .landing이 아니라 굳이 div로 한 번 더 감싸주면서까지 .landing-content에게
스타일을 주었던 첫번째 이유는 .landing안에 부트스트랩 그리드 시스템 클래스가 사용되고 있기 때문입니다.

특정 상황에서는 flexbox 안에 flexbox, 또 그 안에 flexbox를
마구잡이 인셉션(?)으로 사용하다보면... 대환장파티💣💥 가 가끔 일어나기도 하거든요...!

부트스트랩 그리드 시스템이 flexbox로 구현되어 있는데
그런 부트스트랩 시스템을 감싸는 상위 요소, 즉 .landing에게 flex를 사용하는 것이 뭔가... 서늘했습니다. (경험에 의한 본능적인 방어가 아닌가 싶습니다 ㅎㅎ)

그리고 또 다른 이유는:
우리가 결국 정렬하고자 하는 것은 col-12안에 들어있는 .landing-title, .landing-desc, .button-wrapper잖아요?
그럼 그들의 부모인 .col-12에게 flex를 줘야 하는데 제가 부트스트랩 클래스의 스타일은 절대로 건들지 말라 했으니 패스.

남은 옵션은 .col-12 안에 새로운 .landing-content란 아무 의미 없는 div를 만들고
그 친구에게 우리가 정렬하고자 하는 요소들을 정렬하는 스타일 임무를 주는 것이
더 깔끔한 코드가 되지 않을까 생각했습니다! */

/* .landing: 랜딩 섹션, 랜딩과 관련된 요소들을 감싸는 가장 상위 요소

.landing-content: 랜딩 섹션에 들어가는 내용(그리드 관련 요소를 제외한 순수 콘텐츠) 콘텐츠들의 묶는 부모요소(정렬하고자 하는 요소의 직계부모니까 flex 쓰기 딱 좋음!) */

.landing-content {
  width: 100%;
  height: 100vh;
  display: flex;
  flex-direction: column;
  justify-content: center;
}
.landing-title {
  color: #2b292d;
  font-size: 40px;
  line-height: 1;
  letter-spacing: -0.05em;
  margin-bottom: 24px;
}

/* p태그 위에 적었음 */
.landing-desc {
  margin-bottom: 24px;
}

/* button-group이라는 이름은 흔하기 때문에 명시적으로 적어줬음 */
.landing .button-group {
  display: flex;
  flex-direction: row;
  justify-content: center;
  align-items: center;
}
.landing .button-group .fill-button:first-child {
  margin-right: 8px;
}

/* service */

.service {
  background-color: #f4f5f7;
  padding: 80px 0;
}
.service-title {
  color: #2b292d;
  font-size: 22px;
  line-height: 1.3636363636;
  letter-spacing: -0.04em;
  margin-bottom: 16px;
}

/* 형제 요소 끼리 떨어뜨려놓는 건데 p에 주는건 별로,,,
부트스트랩을 사용할 때 절대로 width, height padding-left,right margin-left,right는 건들지 마!!!! 요소간의 위 아래 조절은 괜찮음 */
.service .col-12:first-child {
  margin-bottom: 40px;
}

/* Program */
.program .row:first-child {
  margin-bottom: 32px;
}

.program .col-md-4 {
  margin-bottom: 20px;
}

.program .col-md-4:last-child {
  margin-bottom: 0px;
}

.program .section-category {
  color: #009b4d;
}

.program-card {
  display: block;
  padding: 24px 0 32px;
  border-radius: 8px;
  text-align: center;
  background-color: #fff;
  box-shadow: 0px 4px 6px rgba(0, 0, 0, 0.05), 0px 1px 3px rgba(0, 0, 0, 0.1),
    inset 0px 1px 0px rgba(255, 255, 255, 0.1);
  transition: background-color 300ms ease-in-out, box-shadow 300ms ease-in-out;
}

.program-card:hover {
  background-color: #3141c5;
  box-shadow: 0px 13px 18px rgba(0, 0, 0, 0.15),
    0px 11px 55px rgba(0, 0, 0, 0.07);
  color: #fff;
}

.program-card img {
  display: block;
  width: auto;
  height: 195px;
  margin: 0 auto 16px;
}

.program-card strong {
  font-size: 18px;
  line-height: 1.3333333333;
  letter-spacing: -0.02em;
  transition: color 300ms ease-in-out;
}

/* Curriculum */

/* .curriculum .col-12:first-child {
  margin-bottom: 48px;
} */

.curriculum .row:first-child {
  margin-bottom: 48px;
}
.curriculum .row:last-child .col-12:first-child {
  margin-bottom: 40px;
}

.curriculum .section-category {
  color: #0189d1;
}

.curriculum .section-desc {
  margin-bottom: 32px;
}

.curriculum-image {
  display: none;
}

.curriculum-detail-desc {
  font-size: 15px;
  line-height: 1.4666666667;
  letter-spacing: -0.01;
}
/* .curriculum-detail-desc:first-child {
  margin-bottom: 40px;
} */

/* Subscription */
.subscription {
  background-color: #f2f8fa;
  padding: 40px 0;
  text-align: center;
}
.subscription-image {
  padding: 25px 0;
  margin-bottom: 16px;
}
.subscription-image img {
  display: block;
  height: 190px;
  width: auto;
  margin: 0 auto;
}

.subscription-title {
  color: #2b292d;
  font-size: 32px;
  line-height: 1;
  letter-spacing: -0.05;
  margin-bottom: 16px;
}

.subscription-desc {
  margin-bottom: 24px;
}
.subscription-form .input-group {
  margin-bottom: 8px;
}
.subscription-form .input-group input {
  display: block;
  font-size: 16px;
  line-height: 1.5;
  color: #2b292d;
  letter-spacing: -0.01em;
  padding: 12px 16px;
  border: 1px solid #fff;
  border-radius: 2px;
  width: 100%;
  height: 49px;
  margin-bottom: 8px;
  transition: border-color 250ms ease-in-out;
}

.subscription .input-group input::placeholder {
  color: #7b7b7e;
}

.subscription .input-group input:focus {
  border-color: rgba(1, 137, 209, 0.5);
}
/* 안 생기던 border가 생김 ㅠㅠ => 지금까지는 fill-button을 anchor한테 주었기 때문에 먹었는데 지금은 버튼에게 주었기 때문에 버튼의 기본 스타일인 border가 먹힌거임
위에 fill-buttom에 border=none을 추가해주자! */
.subscription-form .input-group .fill-button {
  width: 100%;
  /* border: 1px solid #3040c4; */
}

.form-notice {
  font-size: 13px;
  color: #7b7b7e;
  line-height: 1.5384615385;
  letter-spacing: 0;
}

.form-notice a {
  color: #3040c4;
  text-decoration: underline;
}

/* Footer */
.footer {
  padding: 24px 0;
}

.footer-links {
  margin-bottom: 8px;
}

.footer-links:last-child {
  margin-bottom: 0px;
}
.footer-links a {
  color: #807f81;
  font-size: 14px;
  line-height: 1.7142857143;
  letter-spacing: -0.01em;
  opacity: 1;
  transition: opacity 250ms ease-in-out;
}

.footer-links a:hover {
  opacity: 0.2;
}
/* >= 768px(Desktop) */
@media screen and (min-width: 768px) {
  p {
    font-size: 22px;
    line-height: 1.3636363636;
  }

  .fill-button {
    width: 160px;
    height: 56px;
    font-size: 18px;
    line-height: 1.5555555556;
  }

  .section {
    padding-bottom: 96px;
  }
  .section-category {
    margin-bottom: 16px;
    font-size: 22px;
    line-height: 1.0909090909;
  }

  .section-title {
    margin-bottom: 32px;
    font-size: 56px;
    line-height: 1.0909090909;
  }

  /* Landing */

  .landing-content {
    height: auto;
    padding: 120px 0;
  }
  .landing-title {
    font-size: 70px;
    line-height: 1.0285714286;
    margin-bottom: 36px;
  }
  .landing .button-group .fill-button:first-child {
    margin-right: 16px;
    font-size: 18px;
  }

  .landing-desc {
    margin-bottom: 32px;
  }

  /* service */

  .service-title {
    font-size: 26px;
    letter-spacing: 1.3076923077;
  }

  .service .col-12:first-child {
    margin-bottom: 0px;
  }

  /* Program */
  .program {
    text-align: center;
  }

  .program .row:first-child {
    margin-bottom: 72px;
  }

  .program-card img {
    margin-bottom: 24px;
  }

  .program-card strong {
    font-size: 20px;
    line-height: 1.2;
  }

  /* Curriculum */
  .curriculum .row:first-child {
    margin-bottom: 24px;
  }

  .curriculum .row:last-child .col-12:first-child {
    margin-bottom: 0px;
  }
  .curriculum .section-desc {
    margin-bottom: 72px;
  }

  .curriculum-image {
    display: block;
  }
  .curriculum-image img {
    display: block;
    width: 100%;
    max-width: 425px;
    height: auto;
  }
  .curriculum-detail-desc {
    font-size: 18px;
    line-height: 1.4444444444;
  }
  /* Subscription */

  .subscription {
    text-align: left;
    padding: 80px 0;
  }
  .subscription-image {
    padding: 8px 0;
  }
  .subscription-image img {
    /* display: block;
    height: auto;
    width: 100%;
    max-width: 287px;
    margin-left: 0px; */
    height: 285px;
    margin-left: 0;
  }
  .subscription-title {
    font-size: 40px;
  }

  .subscription .input-group {
    display: flex;
    align-items: center;
    width: 100%;
    margin-bottom: 4px;
  }

  .subscription .input-group input {
    height: 56px;
    margin-right: 8px;
    margin-bottom: 0;
    font-size: 18px;
    line-height: 1.3333333333;
  }
  .subscription .input-group .fill-button {
    /* flex-grow: 남은 공간에 다 차지하는 것
    flex-shrink: input은 사이즈가 줄어들어도 괜찮은데 button은 안돼
    양의 정수를 주면 줄여들어도 괜찮은 것 0을 주면 절대로 자기 사이즈보다 줄어들면 안 된다는 것*/
    flex-shrink: 0; /* 항상 160px을 유지할 수 있도록 */
    width: 160px;
  }

  .form-notice {
    font-size: 14px;
    line-height: 1.7142857143;
  }
  /* Footer */
  .footer {
    padding: 16px 0;
  }

  .footer-links li {
    margin-right: 16px;
    margin-bottom: 0;
  }
  .footer-links {
    display: flex;
    flex-direction: row;
    justify-content: start;
    align-items: center;
  }
  .footer-links li:last-child {
    margin-right: 0;
  }
}
/* Custom Grid System - Fix container width */
@media screen and (min-width: 1200px) {
  .container {
    max-width: 960px !important;
  }
}
